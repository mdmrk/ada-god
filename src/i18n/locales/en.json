{
  "questions": [
    {
      "title": "Let \\(f(n)\\) be the solution of the recurrence relation \\(f(n) = 2f(\\frac{'{'}n{'}'}{'{'}2{'}'}) + n, \\,f(1) = 1\\)",
      "choices": [
        "\\(f(n)\\in\\Theta(n^{'{'}2{'}'})\\)",
        "\\(f(n)\\in\\Theta(n\\log(n))\\)",
        "\\(f(n)\\in\\Theta(n)\\)"
      ],
      "solution": 1
    },
    {
      "title": "You want to find the shortest path between two cities. To do this you have a table with the distance between pairs of cities where there are roads or a sentinel value (e.g. -1) if there are no roads, so to go from the initial city to the final city you may have to pass through several cities. The geographic coordinates of each city are also known, and thus the geographic distance (in a straight line) between each pair of cities. It is intended to speed up the search for a branching and pruning algorithm by prioritizing the live nodes (cities) that are at the shortest geographical distance from the target city. Select one: ",
      "choices": [
        "The new algorithm will always be faster.",
        "This strategy does not ensure that the shortest path will be obtained",
        "The new algorithm will only be faster for some instances of the problem."
      ],
      "solution": 2
    },
    {
      "title": "Given the following functions, you want to reduce the time complexity of the function \\(g)\\) using iterative dynamic programming. What would be the space complexity?<pre><code>// Precondici√≥n: { 0 <= i < v.size(); i < j <= v.size() }\nunsigned f(const vector<unsigned>&v, unsigned i, unsigned j) {\n\tif(i == j+1)\n\t\treturn v[i];\n\tunsigned sum = 0;\n\tfor(unsigned k = 0; k < j - i; k++)\n\t\tsum += f(v, i, i+k+1) + f(v, i+k+1, j);\n\treturn sum;\n}\n\nunsigned g(const vector<unsigned>&v) {\n\treturn f(v, v.begin(), v.end());\n}</code></pre>",
      "choices": ["Quadratic", "Exponential", "Cubic"],
      "solution": 0
    }
  ]
}
